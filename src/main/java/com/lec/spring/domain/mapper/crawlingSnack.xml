<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lec.spring.domain.Won_CrawlingDAO">
	<insert id="insertSnack" flushCache="true" 
		parameterType="com.lec.spring.domain.Won_CrawlingDTO"
		keyProperty="pro_uid" useGeneratedKeys="true" keyColumn="pro_uid">
		INSERT INTO ic_product
		(pro_name, pro_price, pro_img, pro_content, pro_kind)
		VALUES
		(#{pro_name}, #{pro_price}, #{pro_img}, #{pro_content},"과자")
	</insert>
	
	<insert id="insertHealth" flushCache="true" 
		parameterType="com.lec.spring.domain.Won_CrawlingDTO"
		keyProperty="pro_uid" useGeneratedKeys="true" keyColumn="pro_uid">
		INSERT INTO ic_product
		(pro_name, pro_price, pro_img, pro_content, pro_kind)
		VALUES
		(#{pro_name}, #{pro_price}, #{pro_img}, #{pro_content},"건강기능")
	</insert>

	<select id="selectSnack" resultType="com.lec.spring.domain.Won_CrawlingDTO">
		SELECT 
			pro_uid, 
			pro_name, 
			pro_content, 
			pro_img, 
			pro_price
		FROM 
			ic_product
		WHERE
			pro_kind = "과자" 
		ORDER BY 
			pro_uid ASC		
	</select>
	
	<select id="selectHealth" resultType="com.lec.spring.domain.Won_CrawlingDTO">
		SELECT 
			pro_uid, 
			pro_name, 
			pro_content, 
			pro_img, 
			pro_price
		FROM 
			ic_product
		WHERE
			pro_kind = "건강기능" 
		ORDER BY 
			pro_uid ASC		
	</select>
	
	<select id="selectProInfo" resultType="com.lec.spring.domain.Won_CrawlingDTO">
		SELECT
			pro_uid, 
			pro_name, 
			pro_content, 
			pro_img, 
			pro_price
		FROM 
			ic_product
		WHERE
			pro_uid = #{pro_uid}
	</select>
	
	<select id="selectProQues" resultType="com.lec.spring.domain.WonProQuestionDTO">
	SELECT		
			proq_uid, 
			proq_answerDate , 
			proq_questionDate , 
			proq_viewCnt , 
			proq_status,
			proq_title,
			proq_img,
			proq_answerContent ,
			proq_questionContent ,
			m_uid,
			pro_uid
		FROM 
			ic_productquestion
		WHERE
			pro_uid = #{pro_uid}	
	</select>
	
	<select id="selectProQuesInfo" resultType="com.lec.spring.domain.WonProQuestionDTO">
	SELECT		
			proq_uid, 
			proq_answerDate , 
			proq_questionDate , 
			proq_viewCnt , 
			proq_status,
			proq_title,
			proq_img,
			proq_answerContent ,
			proq_questionContent ,
			m_uid ,
			pro_uid
		FROM 
			ic_productquestion
		WHERE
			proq_uid = #{proq_uid}	
	</select>
	
	<update id="updateProQues" flushCache="true">
		UPDATE 
		ic_productquestion
		SET 
		proq_title = #{proq_title },
		proq_questionContent = #{proq_questionContent }
		WHERE proq_uid = #{proq_uid}
	</update>
	
	<select id="selectMemInfo" resultType="com.lec.spring.domain.WonMemberDTO">
	SELECT		
			m_uid, 
			m_id , 
			m_name , 
			m_mail , 
			m_class,
			m_phone,
			m_addr ,
			m_gender ,
			m_birth ,
			m_joindate 
		FROM 
			ic_member
		WHERE
			m_uid = #{m_uid }
	</select>
	
	<select id="selectMemInfoAll" resultType="com.lec.spring.domain.WonMemberDTO">
	SELECT		
			m_uid, 
			m_id , 
			m_name , 
			m_mail , 
			m_class,
			m_phone,
			m_addr ,
			m_gender ,
			m_birth ,
			m_joindate 
		FROM 
			ic_member
		
	</select>
	<select id="selectProReview" resultType="com.lec.spring.domain.WonProReviewDTO">
	SELECT		
			r_uid, 
			r_date, 
			r_img,
			r_content,
			r_title,
			m_uid,
			pro_uid
		FROM 
			ic_review
		WHERE
			pro_uid = #{pro_uid}	
	</select>
	
	<select id="selectProReviewInfo" resultType="com.lec.spring.domain.WonProReviewDTO">
	SELECT		
			r_uid, 
			r_date, 
			r_img,
			r_content,
			r_title,
			m_uid,
			pro_uid
		FROM 
			ic_review
		WHERE
			r_uid = #{r_uid}	
	</select>
	
	<update id="ProQuesincViewCnt" flushCache="true">
		UPDATE ic_productQuestion
		SET proq_viewCnt = proq_viewCnt + 1
		WHERE proq_uid = #{proq_uid}
	</update>
	
	<update id="updateProReview" flushCache="true">
		UPDATE 
		ic_review
		SET 
		r_title = #{r_title },
		r_content = #{r_content }
		WHERE r_uid = #{r_uid}
	</update>
	
	<delete id="deleteProReview" flushCache="true">
		DELETE FROM ic_review 
		WHERE r_uid = #{r_uid}
	</delete>
	
	<delete id="deleteProQues" flushCache="true">
		DELETE FROM ic_productQuestion 
		WHERE proq_uid = #{proq_uid}
	</delete>
	
	<insert id="insertProReview" flushCache="true" 
		parameterType="com.lec.spring.domain.WonProReviewDTO"
		keyProperty="r_uid" useGeneratedKeys="true" keyColumn="r_uid">
		INSERT INTO 
		ic_review(r_content, r_img, r_title, m_uid, pro_uid )
		VALUES (#{r_content }, #{r_img }, #{r_title }, #{m_uid }, #{pro_uid });
	</insert>
	
	<insert id="insertProQues" flushCache="true" 
		parameterType="com.lec.spring.domain.WonProQuestionDTO"
		keyProperty="proq_uid" useGeneratedKeys="true" keyColumn="proq_uid">
		INSERT INTO 
		ic_productQuestion(proq_title, proq_img, proq_questionContent, m_uid, pro_uid )
		VALUES (#{proq_title }, #{proq_img }, #{proq_questionContent }, #{m_uid }, #{pro_uid });
	</insert>
	
	<insert id="insertBasket" flushCache="true" 
		parameterType="com.lec.spring.domain.WonBasketDTO"
		keyProperty="b_uid" useGeneratedKeys="true" keyColumn="b_uid">
		INSERT INTO 
		ic_basket(b_proName, b_img, b_qty, b_price, m_uid, pro_uid )
		VALUES (#{b_proName }, #{b_img }, #{b_qty }, #{b_price }, #{m_uid }, #{pro_uid });
	</insert>

	<insert id="insertProQuesFile" flushCache="true" 
		parameterType="com.lec.spring.domain.WonQuesFileDTO"
		keyProperty="pqfUid" useGeneratedKeys="true" keyColumn="pqf_uid">
		INSERT INTO 
		ic_productQuesFile(proq_uid, original_name, save_name, size, delete_yn, insert_time, delete_time, ques_path )
		VALUES 
		<foreach collection="list" item="item" separator=",">
		(
		#{item.proqUid }
		, #{item.originalName }
		, #{item.saveName }
		, #{item.size }
		, 'N'
		, NOW()
		, NULL
		, #{item.ques_path }
		)
		</foreach>
	</insert>
	
	<select id="selectProQuesFiles" resultType="com.lec.spring.domain.WonQuesFileDTO">
	SELECT		
			proq_uid AS proqUid
			,pqf_Uid AS pqfUid
			,original_name AS originalName
			,save_name AS saveName
			,size
			,ques_path
			,delete_yn
			,insert_time
			,delete_time
		FROM 
			ic_productQuesFile
		WHERE
			proq_uid = #{proq_uid}	
	</select>
	
	
	<update id="undeleteProQuesFile" parameterType="list" flushCache="true">
	UPDATE ic_productQeusFile
	SET
		delete_yn = 'N'
	WHERE
		pqf_uid IN
	<foreach collection="list" item="item" separator="," open="(" close=")">
		#{item}
	</foreach>
</update>
	
	
	
</mapper>

	